setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1/activity")
library(dplyr)
library(datasets)
tidyData = read.csv("activity.csv")
tidyData[,2] <-  as.Date(tidyData[,2])
tidyData[is.na(tidyData[,1]),1] <- 0
names(tidyData)[2] <- "dateMesure"
tidyData <- group_by(tidyData,dateMesure)
summaryData <- summarize(tidyData, totalSteps = sum(steps))
summary(summaryData)
hist(summaryData$totalSteps, main="")
setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1/activity")
library(dplyr)
library(datasets)
tidyData = read.csv("activity.csv")
tidyData[,2] <-  as.Date(tidyData[,2])
##tidyData[is.na(tidyData[,1]),1] <- 0
names(tidyData)[2] <- "dateMesure"
tidyData <- group_by(tidyData,dateMesure)
summaryData <- summarize(tidyData, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData)
hist(summaryData$totalSteps, main="")
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
dt <- read.csv("activity.csv")
dt$date <- as.character(dt$date)
dt$date <- as.Date(dt$date)
bydate <- aggregate(dt$steps, by = list(dt$date), FUN="sum", na.rm = T)
names(bydate) <- c("date", "total_steps")
hist(bydate$total_steps, main= "Histogram of Total number of steps taken each day", xlab="Total number of steps taken each day")
tidyData = read.csv("activity.csv")
tidyData[,2] <-  as.Date(tidyData[,2])
##tidyData[is.na(tidyData[,1]),1] <- 0
names(tidyData)[2] <- "dateMesure"
tidyData <- group_by(tidyData,dateMesure)
summaryData <- summarize(tidyData, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData)
hist(summaryData$totalSteps, main="")
dt <- read.csv("activity.csv")
dt$date <- as.character(dt$date)
dt$date <- as.Date(dt$date)
bydate <- aggregate(dt$steps, by = list(dt$date), FUN="sum", na.rm = T)
names(bydate) <- c("date", "total_steps")
hist(bydate$total_steps, main= "Histogram of Total number of steps taken each day", xlab="Total number of steps taken each day")
mean(summaryData$totalSteps)
median(summaryData$totalSteps)
dt <- read.csv("activity.csv")
dt$date <- as.character(dt$date)
dt$date <- as.Date(dt$date)
bydate <- aggregate(dt$steps, by = list(dt$date), FUN="sum", na.rm = T)
names(bydate) <- c("date", "total_steps")
hist(bydate$total_steps, main= "Histogram of Total number of steps taken each day", xlab="Total number of steps taken each day")
print(paste("Mean = ", mean(bydate$total_steps, na.rm = T)))
print(paste("Median = ", median(bydate$total_steps, na.rm = T)))
print(paste("Mean : ",mean(summaryData$totalSteps)))
print(paste("Median : ",median(summaryData$totalSteps)))
print(paste("Mean : ",round(mean(summaryData$totalSteps),2))
print(paste("Median : ",median(summaryData$totalSteps)))
print(paste("Mean : ",round(mean(summaryData$totalSteps),2)))
print(paste("Median : ",median(summaryData$totalSteps)))
View(tidyData)
View(tidyData)
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
tidyData2 <- group_by(tidyData,interval)
summaryData2 <- summarize(tidyData2, totalSteps = sum(steps, na.rm = TRUE))
setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1/activity")
library(dplyr)
library(datasets)
tidyData = read.csv("activity.csv")
tidyData[,2] <-  as.Date(tidyData[,2])
##tidyData[is.na(tidyData[,1]),1] <- 0
names(tidyData)[2] <- "dateMesure"
tidyData1 <- group_by(tidyData,dateMesure)
summaryData1 <- summarize(tidyData1, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData1)
hist(summaryData1$totalSteps, main="Total number of steps taken each day")
# Faire ca avec Mark
print(paste("Mean : ",round(mean(summaryData1$totalSteps),2)))
print(paste("Median : ",median(summaryData1$totalSteps)))
##tidyData[is.na(tidyData[,1]),1] <- 0
setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1/activity")
library(dplyr)
library(datasets)
originalData = read.csv("activity.csv")
originalData[,2] <-  as.Date(originalData[,2])
names(originalData)[2] <- "mesureDate"
tidyData1 <- group_by(tidyData,mesureDate)
summaryData1 <- summarize(tidyData1, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData1)
hist(summaryData1$totalSteps, main="Total number of steps taken each day")
# Faire ca avec Mark
print(paste("Mean : ",round(mean(summaryData1$totalSteps),2)))
print(paste("Median : ",median(summaryData1$totalSteps)))
##tidyData[is.na(tidyData[,1]),1] <- 0
setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1/activity")
library(dplyr)
library(datasets)
originalData = read.csv("activity.csv")
originalData[,2] <-  as.Date(originalData[,2])
names(originalData)[2] <- "mesureDate"
tidyData1 <- group_by(tidyData,mesureDate)
summaryData1 <- summarize(tidyData1, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData1)
hist(summaryData1$totalSteps, main="Total number of steps taken each day")
# Faire ca avec Mark
print(paste("Mean : ",round(mean(summaryData1$totalSteps),2)))
print(paste("Median : ",median(summaryData1$totalSteps)))
tidyData2 <- group_by(originalData,interval)
summaryData2 <- summarize(tidyData2, totalSteps = sum(steps, na.rm = TRUE))
##tidyData[is.na(tidyData[,1]),1] <- 0
setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1/activity")
library(dplyr)
library(datasets)
originalData = read.csv("activity.csv")
originalData[,2] <-  as.Date(originalData[,2])
names(originalData)[2] <- "mesureDate"
tidyData1 <- group_by(originalData,mesureDate)
summaryData1 <- summarize(tidyData1, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData1)
hist(summaryData1$totalSteps, main="Total number of steps taken each day")
# Faire ca avec Mark
print(paste("Mean : ",round(mean(summaryData1$totalSteps),2)))
print(paste("Median : ",median(summaryData1$totalSteps)))
tidyData2 <- group_by(originalData,interval)
summaryData2 <- summarize(tidyData2, totalSteps = sum(steps, na.rm = TRUE))
View(summaryData2)
View(summaryData2)
tidyData2 <- group_by(originalData,interval)
summaryData2 <- summarize(tidyData2, totalSteps = avg(steps, na.rm = TRUE))
par(mfrow = c(1, 1))
plot(summaryData2$interval, summaryData2$totalSteps, type="l", xlab="5 Min interval", ylab="Average Steps",main = "Average number of steps taken")
tidyData2 <- group_by(originalData,interval)
summaryData2 <- summarize(tidyData2, totalSteps = mean(steps, na.rm = TRUE))
par(mfrow = c(1, 1))
plot(summaryData2$interval, summaryData2$totalSteps, type="l", xlab="5 Min interval", ylab="Average Steps",main = "Average number of steps taken")
View(summaryData2)
byinterval <- aggregate(dt$steps, by = list(dt$interval), FUN="mean", na.rm = T)
names(byinterval) <- c("interval", "mean_steps")
plot(byinterval$interval, byinterval$mean_steps, type="l", ylab="Average steps taken", xlab="interval", main="Average steps taken in each interval")
dt <- read.csv("activity.csv")
dt$date <- as.character(dt$date)
dt$date <- as.Date(dt$date)
bydate <- aggregate(dt$steps, by = list(dt$date), FUN="sum", na.rm = T)
names(bydate) <- c("date", "total_steps")
hist(bydate$total_steps, main= "Histogram of Total number of steps taken each day", xlab="Total number of steps taken each day")
print(paste("Mean = ", mean(bydate$total_steps, na.rm = T)))
print(paste("Median = ", median(bydate$total_steps, na.rm = T)))
byinterval <- aggregate(dt$steps, by = list(dt$interval), FUN="mean", na.rm = T)
names(byinterval) <- c("interval", "mean_steps")
plot(byinterval$interval, byinterval$mean_steps, type="l", ylab="Average steps taken", xlab="interval", main="Average steps taken in each interval")
##tidyData[is.na(tidyData[,1]),1] <- 0
setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1/activity")
library(dplyr)
library(datasets)
originalData = read.csv("activity.csv")
originalData[,2] <-  as.Date(originalData[,2])
names(originalData)[2] <- "mesureDate"
tidyData1 <- group_by(originalData,mesureDate)
summaryData1 <- summarize(tidyData1, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData1)
hist(summaryData1$totalSteps, main="Total number of steps taken each day")
# Faire ca avec Mark
print(paste("Mean : ",round(mean(summaryData1$totalSteps),2)))
print(paste("Median : ",median(summaryData1$totalSteps)))
tidyData2 <- group_by(originalData,interval)
summaryData2 <- summarize(tidyData2, totalSteps = mean(steps, na.rm = TRUE))
par(mfrow = c(1, 1))
plot(summaryData2$interval, summaryData2$totalSteps, type="l", xlab="5 Min interval", ylab="Average Steps",main = "Average number of steps taken every interval")
summaryData2
##tidyData[is.na(tidyData[,1]),1] <- 0
setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1/activity")
library(dplyr)
library(datasets)
originalData = read.csv("activity.csv")
originalData[,2] <-  as.Date(originalData[,2])
names(originalData)[2] <- "mesureDate"
tidyData1 <- group_by(originalData,mesureDate)
summaryData1 <- summarize(tidyData1, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData1)
hist(summaryData1$totalSteps, main="Total number of steps taken each day")
# Faire ca avec Mark
print(paste("Mean : ",round(mean(summaryData1$totalSteps),2)))
print(paste("Median : ",median(summaryData1$totalSteps)))
tidyData2 <- group_by(originalData,interval)
summaryData2 <- summarize(tidyData2, meanSteps = mean(steps, na.rm = TRUE), sumSteps = sum(steps, na.rm = TRUE))
par(mfrow = c(1, 1))
plot(summaryData2$interval, summaryData2$meanSteps, type="l", xlab="5 Min interval", ylab="Average Steps",main = "Average number of steps taken every interval")
#summaryData2
View(summaryData2)
summaryData2[summaryData2$sumSteps=max(summaryData2$sumSteps)]
max(summaryData2$sumSteps)
summaryData2[summaryData2$sumSteps=maxSteps,]
summaryData2[sumSteps=maxSteps,]
a <- summaryData2[summaryData2$sumSteps=maxSteps,]
a <- summaryData2[summaryData2$sumSteps = maxSteps,]
select(summaryData2, sumSteps = maxSteps)
maxSteps <- max(summaryData2$sumSteps)
select(summaryData2, sumSteps = maxSteps)
select(summaryData2, sumSteps = maxSteps, na.omit(TRUE))
select(summaryData2, "sumSteps = maxSteps")
select(summaryData2, sumSteps in (maxSteps))
select(summaryData2, sumSteps %in% (maxSteps))
select(summaryData2, sumSteps %in% c(maxSteps))
summaryData2[summaryData2$sumSteps  %in% c(maxSteps)]
summaryData2[summaryData2$sumSteps  %in% c(maxSteps),]
summaryData2[summaryData2$sumSteps  %in% c(maxSteps),1]
summaryData2[[summaryData2$sumSteps  %in% c(maxSteps),1]]
summary(summaryData2[summaryData2$sumSteps  %in% c(maxSteps),1])
str(summaryData2[summaryData2$sumSteps  %in% c(maxSteps),1])
maxSteps <- max(summaryData2$sumSteps)
InterValMaxSteps <- summaryData2[summaryData2$sumSteps  %in% c(maxSteps),1]
View(InterValMaxSteps)
InterValMaxSteps <- [summaryData2[summaryData2$sumSteps  %in% c(maxSteps),1] ]
x <- summaryData2[1,1]
y <- x[]
y <- x[[]]
print(paste("Interval with maximum average steps = ", byinterval[byinterval$mean_steps == max(byinterval$mean_steps), 1]))
print(paste("Interval with maximum average steps = ", byinterval[byinterval$mean_steps == max(byinterval$mean_steps), 1]))
dt <- read.csv("activity.csv")
dt$date <- as.character(dt$date)
dt$date <- as.Date(dt$date)
bydate <- aggregate(dt$steps, by = list(dt$date), FUN="sum", na.rm = T)
names(bydate) <- c("date", "total_steps")
hist(bydate$total_steps, main= "Histogram of Total number of steps taken each day", xlab="Total number of steps taken each day")
print(paste("Mean = ", mean(bydate$total_steps, na.rm = T)))
print(paste("Median = ", median(bydate$total_steps, na.rm = T)))
byinterval <- aggregate(dt$steps, by = list(dt$interval), FUN="mean", na.rm = T)
names(byinterval) <- c("interval", "mean_steps")
plot(byinterval$interval, byinterval$mean_steps, type="l", ylab="Average steps taken", xlab="interval", main="Average steps taken in each interval")
print(paste("Interval with maximum average steps = ", byinterval[byinterval$mean_steps == max(byinterval$mean_steps), 1]))
print(paste("InterVal with Max Steps",InterValMaxSteps))
print(paste("InterVal with Max Steps : ",InterValMaxSteps))
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
##tidyData[is.na(tidyData[,1]),1] <- 0
setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1/activity")
library(dplyr)
library(datasets)
originalData = read.csv("activity.csv")
originalData[,2] <-  as.Date(originalData[,2])
names(originalData)[2] <- "mesureDate"
tidyData1 <- group_by(originalData,mesureDate)
summaryData1 <- summarize(tidyData1, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData1)
hist(summaryData1$totalSteps, main="Total number of steps taken each day")
# Faire ca avec Mark
print(paste("Mean : ",round(mean(summaryData1$totalSteps),2)))
print(paste("Median : ",median(summaryData1$totalSteps)))
tidyData2 <- group_by(originalData,interval)
summaryData2 <- summarize(tidyData2, meanSteps = mean(steps, na.rm = TRUE), sumSteps = sum(steps, na.rm = TRUE))
par(mfrow = c(1, 1))
plot(summaryData2$interval, summaryData2$meanSteps, type="l", xlab="5 Min interval", ylab="Average Steps",main = "Average number of steps taken every interval")
maxSteps <- max(summaryData2$sumSteps)
InterValMaxSteps <- summaryData2[summaryData2$sumSteps  %in% c(maxSteps),1]
print(paste("InterVal with Max Steps : ",InterValMaxSteps))
originalData[is.na()]
is.na(originalData)
table(is.na(originalData))
table(is.na(originalData))[1,2]
a <- table(is.na(originalData))
a <- sum(is.na(originalData))
print(paste("Total number of missing values = ", sum(is.na(dt$steps))))
dt <- read.csv("activity.csv")
dt$date <- as.character(dt$date)
dt$date <- as.Date(dt$date)
bydate <- aggregate(dt$steps, by = list(dt$date), FUN="sum", na.rm = T)
names(bydate) <- c("date", "total_steps")
hist(bydate$total_steps, main= "Histogram of Total number of steps taken each day", xlab="Total number of steps taken each day")
print(paste("Mean = ", mean(bydate$total_steps, na.rm = T)))
print(paste("Median = ", median(bydate$total_steps, na.rm = T)))
byinterval <- aggregate(dt$steps, by = list(dt$interval), FUN="mean", na.rm = T)
names(byinterval) <- c("interval", "mean_steps")
plot(byinterval$interval, byinterval$mean_steps, type="l", ylab="Average steps taken", xlab="interval", main="Average steps taken in each interval")
print(paste("Interval with maximum average steps = ", byinterval[byinterval$mean_steps == max(byinterval$mean_steps), 1]))
print(paste("Total number of missing values = ", sum(is.na(dt$steps))))
print(paste("Total Rows with missing Data : ",sum(is.na(originalData))))
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
revisedData <- originalData
revisedData[is.na(tidyData[,1]),1]
revisedData <- originalData
revisedData[is.na(tidyData[,1]),1]
revisedData <- originalData
revisedData[is.na(revisedData[,1]),1]
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
View(summaryData2)
View(originalData)
tidyData3 <- merge(originalData, summaryData2, by.x ="InterVal" , by.y = "interval")
tidyData3 <- merge(originalData, summaryData2, by.x ="interVal" , by.y = "interval")
tidyData3 <- inner_join(originalData, summaryData2)
tidyData3 <- inner_join(originalData, summaryData2, by = "interval")
View(tidyData3)
View(summaryData2)
View(summaryData2)
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
tidyData3 <- mutate(tidyData3, stepsCorrected= ifelse(is.na(steps),steps,round(meanSteps)))
tidyData3 <- mutate(tidyData3, stepsCorrected= ifelse(is.na(steps),round(meanSteps),steps))
tidyData3 <- tidyData3 %>% mutate( stepsCorrected= ifelse(is.na(steps),round(meanSteps),steps)) %>% select(mesureDate, interval,stepsCorrected)
tidyData3 <- rename(tidyData3, stepsCorrected, steps)
tidyData3 <- rename(tidyData3,  steps=stepsCorrected)
tidyData3 <- inner_join(originalData, summaryData2, by = "interval")
tidyData3 <- tidyData3 %>% mutate( stepsCorrected= ifelse(is.na(steps),round(meanSteps),steps)) %>% select(mesureDate, interval,stepsCorrected) %>% rename(tidyData3,  steps=stepsCorrected)
tidyData3 <- inner_join(originalData, summaryData2, by = "interval")
tidyData3 <- tidyData3 %>% mutate( stepsCorrected= ifelse(is.na(steps),round(meanSteps),steps)) %>% select(mesureDate, interval,stepsCorrected) %>% rename( steps=stepsCorrected)
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
revisedData[is.na(revisedData[,1]),1]
print(sum(originalData[is.na(originalData[,1]),1] ))
originalData[is.na(originalData[,1]),1]
sum(originalData[is.na(originalData[,1]),1] )
dim(originalData[is.na(originalData[,1]),1] )
originalData[is.na(originalData[,1])]
originalData[is.na(originalData[,1]),]
is.na(originalData[,1])
sum(is.na(originalData[,1]))
print(paste("", sum(is.na(originalData[,1]))))
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
tidyData3 <- group_by(tidyData3,interval)
summaryData3 <- summarize(tidyData3, meanSteps = mean(steps), sumSteps = sum(steps))
par(mfrow = c(1, 1))
plot(summaryData3$interval, summaryData3$meanSteps, type="l", xlab="5 Min interval", ylab="Average Steps",main = "Corrected Average number of steps taken every interval")
maxStepsCorrected <- max(summaryData3$sumSteps)
InterValMaxStepsCorrected <- summaryData3[summaryData3$sumSteps  %in% c(maxSteps),1]
tidyData3 <- group_by(originalData,mesureDate)
summaryData3 <- summarize(tidyData3, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData3)
hist(summaryData3$totalSteps, main="Corrected Total number of steps taken each day")
# Faire ca avec Mark
print(paste("Mean : ",round(mean(summaryData3$totalSteps),2)))
print(paste("Median : ",median(summaryData3$totalSteps)))
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
library(chron)
tidyData4 <- tidyData3 %>% mutate(weekDay = is.weekend(mesureDate))
View(tidyData4)
tidyData5 <- group_by( tidyData4, c(mesureDate,weekday))
tidyData5 <- group_by( tidyData4, c("mesureDate","weekday"))
tidyData4 <- tidyData3 %>% mutate(weekDay = is.weekend(mesureDate))
tidyData5 <- tidyData4 %>% group_by( mesureDate,weekday))
tidyData5 <- tidyData4 %>% group_by( mesureDate,weekday)
tidyData5 <- tidyData4 %>% group_by( mesureDate,weekDay)
summarise(tidyData5)
tidyData4 <- tidyData3 %>% mutate(weekDay = is.weekend(mesureDate)) %>% group_by( mesureDate,weekDay)
tidyData5 <- summarise(tidyData4)
View(tidyData5)
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
View(tidyData5)
tidyData4 <- tidyData3 %>% mutate(weekDay = is.weekend(mesureDate)) %>% group_by( mesureDate,weekDay)
tidyData5 <- summarise(tidyData4)
tidyData5 <- tidyData5 %>% mutate(whichDay=ifelse(weekDay,"WEEKEND","WEEKDAY"))
View(tidyData5)
tidyData4 <- tidyData3 %>% mutate(weekDay = is.weekend(mesureDate)) %>% group_by( mesureDate,weekDay)
tidyData5 <- summarise(tidyData4)
tidyData5 <- tidyData5 %>% mutate(whichDay=ifelse(weekDay,"WEEKEND","WEEKDAY")) %>% selec(mesureDate,weekDay)
tidyData4 <- tidyData3 %>% mutate(weekDay = is.weekend(mesureDate)) %>% group_by( mesureDate,weekDay)
tidyData5 <- summarise(tidyData4)
tidyData5 <- tidyData5 %>% mutate(whichDay=ifelse(weekDay,"WEEKEND","WEEKDAY")) %>% select(mesureDate,weekDay)
tidyData4 <- tidyData3 %>% mutate(weekDay = is.weekend(mesureDate)) %>% group_by( mesureDate,weekDay)
tidyData5 <- summarise(tidyData4)
tidyData5 <- tidyData5 %>% mutate(whichDay=ifelse(weekDay,"WEEKEND","WEEKDAY")) %>% select(mesureDate,whichDay)
tidyData4 <- summarise(tidyData3)
View(tidyData4)
tidyData4 <- summarise(tidyData3)
tidyData4 <- tidyData4 %>% mutate(weekDay = is.weekend(mesureDate)) %>% group_by( mesureDate,weekDay) %>% mutate(whichDay=ifelse(weekDay,"WEEKEND","WEEKDAY")) %>% select(mesureDate,whichDay)
tidyData4 <- summarise(tidyData3)
tidyData4 <- tidyData4 %>% mutate(weekDay = is.weekend(mesureDate)) %>% mutate(whichDay=ifelse(weekDay,"WEEKEND","WEEKDAY")) %>% select(mesureDate,whichDay)
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
weedDaysTable <- summarise(tidyData3)
weedDaysTable <- weedDaysTable %>% mutate(weekDay = is.weekend(mesureDate)) %>% mutate(whichDay=ifelse(weekDay,"WEEKEND","WEEKDAY")) %>% select(mesureDate,whichDay)
View(weedDaysTable)
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
daysTable <- summarise(tidyData3)
daysTable <- daysTable %>% mutate(weekDay = is.weekend(mesureDate)) %>% mutate(whichDay=ifelse(weekDay,"WEEKEND","WEEKDAY")) %>% select(mesureDate,whichDay)
tidyData4 <- inner_join(tidyData3, daysTable, by = "mesureDate")
View(tidyData4)
tidyData4_weekDays <- tidyData4 %>% filter(daysTable, whichDay=="WEEKDAY")
tidyData4_weekendDays <- tidyData4 %>% filter(daysTable, whichDay=="WEEKEND")
tidyData4 <- inner_join(tidyData3, daysTable, by = "mesureDate")
tidyData4_weekDays <- tidyData4 %>% filter( whichDay=="WEEKDAY")
tidyData4_weekendDays <- tidyData4 %>% filter( whichDay=="WEEKEND")
tidyData4 <- inner_join(tidyData3, daysTable, by = "mesureDate")
tidyData4 <- group_by(tidyData4,interval)
tidyData4 <- summarize(tidyData4, meanSteps = mean(steps, na.rm = TRUE), sumSteps = sum(steps, na.rm = TRUE))
tidyData4_weekDays <- tidyData4 %>% filter( whichDay=="WEEKDAY")
tidyData4_weekendDays <- tidyData4 %>% filter( whichDay=="WEEKEND")
tidyData4 <- inner_join(tidyData3, daysTable, by = "mesureDate")
tidyData4 <- group_by(tidyData4,interval)
View(tidyData4)
tidyData4 <- summarize(tidyData4, meanSteps = mean(steps), sumSteps = sum(steps))
View(tidyData4)
tidyData4 <- inner_join(tidyData3, daysTable, by = "mesureDate")
tidyData4_weekDays <- tidyData4 %>% filter( whichDay=="WEEKDAY")
tidyData4_weekendDays <- tidyData4 %>% filter( whichDay=="WEEKEND")
tidyData4_weekDays <- group_by(tidyData4_weekDays,interval)
tidyData4_weekDays <- summarize(tidyData4_weekDays, meanSteps = mean(steps))
tidyData4_weekendDays <- group_by(tidyData4_weekendDays,interval)
tidyData4_weekendDays <- summarize(tidyData4_weekendDays, meanSteps = mean(steps))
par(mfrow = c(2, 1))
plot(tidyData4_weekendDays$interval, tidyData4_weekendDays$meanSteps, main="weekend",
type="l", xlab="", ylab="Number of steps")
plot(tidyData4_weekDays$interval, tidyData4_weekDays$meanSteps, main="weekday",
type="l", xlab="", ylab="Number of steps")
par(mfrow = c(2, 1))
plot(tidyData4_weekendDays$interval, tidyData4_weekendDays$meanSteps, main="weekend",
type="l")
plot(tidyData4_weekDays$interval, tidyData4_weekDays$meanSteps, main="weekday",
type="l")
par(mfrow = c(2, 1))
plot(tidyData4_weekendDays$interval, tidyData4_weekendDays$meanSteps, main="weekend",
type="l", xlab="")
plot(tidyData4_weekDays$interval, tidyData4_weekDays$meanSteps, main="weekday",
type="l", xlab="")
par(mfrow = c(2, 1))
plot(tidyData4_weekendDays$interval, tidyData4_weekendDays$meanSteps, main="weekend",
type="l", xlab="", ylab="")
plot(tidyData4_weekDays$interval, tidyData4_weekDays$meanSteps, main="weekday",
type="l", xlab="", ylab="")
library(lattice)
tidyData4 <- tidyData4 %>% group_by(interval,whichDay)
tidyData4 <- summarize(tidyData4, meanSteps = mean(steps))
View(tidyData4)
xyplot(meanSteps ~ interval | whichDay, data = tidyData4, layout = c(1, 2), type = "l",
+    xlab = "Interval", ylab = "Number of steps")
xyplot(meanSteps ~ interval | whichDay, data = tidyData4, layout = c(1, 2), type = "l", xlab = "Interval", ylab = "Number of steps")
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
##tidyData[is.na(tidyData[,1]),1] <- 0
setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1/activity")
library(dplyr)
library(chron)
library(lattice)
#library(datasets)
originalData = read.csv("activity.csv")
originalData[,2] <-  as.Date(originalData[,2])
names(originalData)[2] <- "mesureDate"
tidyData1 <- group_by(originalData,mesureDate)
summaryData1 <- summarize(tidyData1, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData1)
hist(summaryData1$totalSteps, main="Total number of steps taken each day")
# Faire ca avec Mark
print(paste("Mean : ",round(mean(summaryData1$totalSteps),2)))
print(paste("Median : ",median(summaryData1$totalSteps)))
tidyData2 <- group_by(originalData,interval)
summaryData2 <- summarize(tidyData2, meanSteps = mean(steps, na.rm = TRUE), sumSteps = sum(steps, na.rm = TRUE))
par(mfrow = c(1, 1))
plot(summaryData2$interval, summaryData2$meanSteps, type="l", xlab="5 Min interval", ylab="Average Steps",main = "Average number of steps taken every interval")
maxSteps <- max(summaryData2$sumSteps)
InterValMaxSteps <- summaryData2[summaryData2$sumSteps  %in% c(maxSteps),1]
print(paste("InterVal with Max Steps : ",InterValMaxSteps))
print(paste("Total Rows with missing Data : ",sum(is.na(originalData))))
revisedData <- originalData
print(paste("Total NA Data :", sum(is.na(originalData[,1]))))
tidyData3 <- inner_join(originalData, summaryData2, by = "interval")
tidyData3 <- tidyData3 %>% mutate( stepsCorrected= ifelse(is.na(steps),round(meanSteps),steps)) %>% select(mesureDate, interval,stepsCorrected) %>% rename( steps=stepsCorrected)
tidyData3 <- group_by(tidyData3,mesureDate)
summaryData3 <- summarize(tidyData3, totalSteps = sum(steps, na.rm = TRUE))
summary(summaryData3)
hist(summaryData3$totalSteps, main="Corrected Total number of steps taken each day")
# Faire ca avec Mark
print(paste("Mean : ",round(mean(summaryData3$totalSteps),2)))
print(paste("Median : ",median(summaryData3$totalSteps)))
daysTable <- summarise(tidyData3)
daysTable <- daysTable %>% mutate(weekDay = is.weekend(mesureDate)) %>% mutate(whichDay=ifelse(weekDay,"WEEKEND","WEEKDAY")) %>% select(mesureDate,whichDay)
tidyData4 <- inner_join(tidyData3, daysTable, by = "mesureDate")
tidyData4_weekDays <- tidyData4 %>% filter( whichDay=="WEEKDAY")
tidyData4_weekendDays <- tidyData4 %>% filter( whichDay=="WEEKEND")
tidyData4 <- tidyData4 %>% group_by(interval,whichDay)
tidyData4 <- summarize(tidyData4, meanSteps = mean(steps))
tidyData4_weekDays <- group_by(tidyData4_weekDays,interval)
tidyData4_weekDays <- summarize(tidyData4_weekDays, meanSteps = mean(steps))
tidyData4_weekendDays <- group_by(tidyData4_weekendDays,interval)
tidyData4_weekendDays <- summarize(tidyData4_weekendDays, meanSteps = mean(steps))
par(mfrow = c(1, 1))
xyplot(meanSteps ~ interval | whichDay, data = tidyData4, layout = c(1, 2), type = "l", xlab = "Interval", ylab = "Number of steps")
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
print(paste("Total Rows with NA Data : ",sum(is.na(originalData))))
print(paste("Total NA Data :", sum(is.na(originalData[,1]))))
setwd("C:/BigData/RWorkingDir/RDirectory/reproductible/week2/RepData_PeerAssessment1")
unlink('PA1_template_cache', recursive = TRUE)
suppressMessages(library(dplyr))
suppressMessages(library(chron))
suppressMessages(library(lattice))
originalData = read.csv("./activity/activity.csv")
originalData[,2] <-  as.Date(originalData[,2])
names(originalData)[2] <- "mesureDate"
tidyData1 <- group_by(originalData,mesureDate)
summaryData1 <- summarize(tidyData1, totalSteps = sum(steps, na.rm = TRUE))
hist(summaryData1$totalSteps, main="Total number of steps taken each day",xlab = "")
print(paste("Mean : ",round(mean(summaryData1$totalSteps),2)))
print(paste("Median : ",median(summaryData1$totalSteps)))
tidyData2 <- group_by(originalData,interval)
summaryData2 <- summarize(tidyData2, meanSteps = mean(steps, na.rm = TRUE), sumSteps = sum(steps, na.rm = TRUE))
par(mfrow = c(1, 1))
plot(summaryData2$interval, summaryData2$meanSteps, type="l", xlab="5 Min interval", ylab="Average Steps",main = "Average number of steps taken every interval")
maxSteps <- max(summaryData2$sumSteps)
InterValMaxSteps <- summaryData2[summaryData2$sumSteps  %in% c(maxSteps),1]
print(paste("InterVal with Max Steps : ",InterValMaxSteps))
print(paste("Total Rows with NA Data : ",sum(is.na(originalData))))
tidyData3 <- inner_join(originalData, summaryData2, by = "interval")
tidyData3 <- tidyData3 %>% mutate( stepsCorrected= ifelse(is.na(steps),round(meanSteps),steps)) %>% select(mesureDate, interval,stepsCorrected) %>% rename( steps=stepsCorrected)
tidyData3 <- group_by(tidyData3,mesureDate)
summaryData3 <- summarize(tidyData3, totalSteps = sum(steps, na.rm = TRUE))
hist(summaryData3$totalSteps, main="Corrected Total number of steps taken each day",xlab="")
print(paste("Mean : ",round(mean(summaryData3$totalSteps),2)))
print(paste("Median : ",median(summaryData3$totalSteps)))
daysTable <- summarise(tidyData3)
daysTable <- daysTable %>% mutate(weekDay = is.weekend(mesureDate)) %>% mutate(whichDay=ifelse(weekDay,"weekend","weekday")) %>% select(mesureDate,whichDay)
tidyData4 <- inner_join(tidyData3, daysTable, by = "mesureDate")
tidyData4 <- tidyData4 %>% group_by(interval,whichDay)
tidyData4 <- summarize(tidyData4, meanSteps = mean(steps))
par(mfrow = c(1, 1))
xyplot(meanSteps ~ interval | whichDay, data = tidyData4, layout = c(1, 2), type = "l", xlab = "Interval", ylab = "Number of steps")
knit2html("PA1_template.Rmd")
source('C:/BigData/RWorkingDir/RDirectory/reproductible/week2/rep1.R')
